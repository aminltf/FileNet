@page "{id:guid}"
@model FileNet.WebApplication.Pages.Employees.DocumentsModel
@{
    ViewData["Title"] = "Employee Documents";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <h2 class="mb-0">اسناد</h2>
            @if (Model.Employee is not null)
            {
                <div class="text-muted">
                    @Model.Employee.FirstName @Model.Employee.LastName
                    <span class="mx-1">|</span>
                    <small>کدملی: @Model.Employee.NationalCode</small>
                </div>
            }
        </div>
        <a class="btn btn-outline-secondary" asp-page="Index">بازگشت</a>
    </div>

    @if (!string.IsNullOrWhiteSpace(Model.Success))
    {
        <div class="alert alert-success">@Model.Success</div>
    }
    @if (!string.IsNullOrWhiteSpace(Model.Error))
    {
        <div class="alert alert-danger">@Model.Error</div>
    }

    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <span>بارگذاری سند جدید</span>
            <a class="btn btn-outline-secondary"
               href="filenet-scan://scan?employeeId=@Model.EmployeeId&category=0&title=@Uri.EscapeDataString($"Scan_{DateTime.Now:yyyyMMdd_HHmmss}")">
                Scan with Epson
            </a>
        </div>
        <div class="card-body">
            <form method="post" enctype="multipart/form-data" asp-page-handler="Upload">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-2"></div>
                <div class="row g-3">
                    <div class="col-md-6">
                        <label asp-for="Input.Title" class="form-label">عنوان</label>
                        <input asp-for="Input.Title" class="form-control" />
                        <span asp-validation-for="Input.Title" class="text-danger"></span>
                    </div>
                    <div class="col-md-3">
                        <label asp-for="Input.Category" class="form-label">دسته‌بندی</label>
                        <select asp-for="Input.Category" class="form-select">
                            @foreach (var c in FileNet.WebApplication.Pages.Employees.DocumentsModel.Categories)
                            {
                                <option value="@c.Value">@c.Name</option>
                            }
                        </select>
                        <span asp-validation-for="Input.Category" class="text-danger"></span>
                    </div>
                    <div class="col-md-3">
                        <label asp-for="Input.File" class="form-label">فایل</label>
                        <input asp-for="Input.File" class="form-control" type="file" />
                        <span asp-validation-for="Input.File" class="text-danger"></span>
                    </div>
                </div>
                <div class="mt-3">
                    <button type="submit" class="btn btn-primary">بارگذاری</button>
                </div>
            </form>
        </div>
    </div>

    <div class="card">
        <div class="card-header">Files (@Model.Docs.Count)</div>
        <div class="card-body p-0">
            <table class="table table-striped mb-0 align-middle text-center">
                <thead>
                    <tr>
                        <th style="width:1%">#</th>
                        <th>عنوان</th>
                        <th>دسته‌بندی</th>
                        <th>نام فایل</th>
                        <th>اندازه</th>
                        <th>نوع</th>
                        <th>ایجاد</th>
                        <th style="width:1%">عملیات</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var i = 1;
                        foreach (var d in Model.Docs)
                        {
                            <tr>
                                <td>@i</td>
                                <td>@(d.Title ?? "-")</td>
                                <td>@d.Category</td>
                                <td>@d.FileName</td>
                                <td>@(string.Format("{0:N0}", d.Size)) B</td>
                                <td>@d.ContentType</td>
                                <td>@d.UploadedOn.LocalDateTime</td>
                                <td class="text-nowrap">
                                    <!-- Download -->
                                    <a class="btn btn-sm btn-outline-primary btn-icon"
                                       asp-page-handler="Download"
                                       asp-route-id="@Model.EmployeeId"
                                       asp-route-docId="@d.Id"
                                       aria-label="Download" data-bs-toggle="tooltip" title="دریافت">
                                        <i class="bi bi-download"></i>
                                    </a>

                                    <!-- Delete -->
                                    <form method="post" asp-page-handler="Delete"
                                          asp-route-id="@Model.EmployeeId"
                                          asp-route-docId="@d.Id"
                                          class="d-inline"
                                          onsubmit="return confirm('Delete this document?');">
                                        <button class="btn btn-sm btn-outline-danger btn-icon"
                                                type="submit"
                                                aria-label="Delete" data-bs-toggle="tooltip" title="حذف">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </form>

                                    <!-- Preview -->
                                    <button type="button"
                                            class="btn btn-sm btn-outline-info btn-icon btn-preview"
                                            data-docid="@d.Id"
                                            data-name="@d.FileName"
                                            data-type="@d.ContentType"
                                            aria-label="Preview" data-bs-toggle="tooltip" title="نمایش">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                </td>
                            </tr>
                            i++;
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header modal-header custom-header">
                <h5 class="modal-title" id="previewModalLabel">Preview</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <div id="previewUnsupported" class="alert alert-warning d-none">
                    Preview is not available for this file type. Please use the Download button.
                    <div class="mt-2">
                        <a id="fallbackDownload" class="btn btn-primary btn-sm">Download</a>
                    </div>
                </div>

                <img id="previewImage" class="img-fluid d-none" alt="preview" />
                <iframe id="previewFrame" class="w-100 d-none" style="height:75vh;border:0;"></iframe>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (function () {
          const modalEl = document.getElementById('previewModal');
          const bsModal = new bootstrap.Modal(modalEl);
          const imgEl = document.getElementById('previewImage');
          const frameEl = document.getElementById('previewFrame');
          const unsupportedEl = document.getElementById('previewUnsupported');
          const fallbackDownload = document.getElementById('fallbackDownload');
          const titleEl = document.getElementById('previewModalLabel');

          function hideAll() {
            imgEl.classList.add('d-none');
            frameEl.classList.add('d-none');
            unsupportedEl.classList.add('d-none');
          }

          // Base URLs for handlers on the same page
          const basePreviewUrl = '@Url.Page("Documents", "Preview", new { id = Model.EmployeeId })';
          const baseDownloadUrl = '@Url.Page("Documents", "Download", new { id = Model.EmployeeId })';

          document.querySelectorAll('.btn-preview').forEach(btn => {
            btn.addEventListener('click', () => {
              const id = btn.dataset.docid;
              const name = btn.dataset.name || 'preview';
              const type = (btn.dataset.type || '').toLowerCase();

              titleEl.textContent = `Preview — ${name}`;
              hideAll();

              const previewUrl = `${basePreviewUrl}&docId=${encodeURIComponent(id)}`;
              const downloadUrl = `${baseDownloadUrl}&docId=${encodeURIComponent(id)}`;
              fallbackDownload.setAttribute('href', downloadUrl);

              if (type.startsWith('image/')) {
                imgEl.src = previewUrl;
                imgEl.classList.remove('d-none');
              } else if (type === 'application/pdf' || type.startsWith('text/')) {
                frameEl.src = previewUrl;
                frameEl.classList.remove('d-none');
              } else {
                unsupportedEl.classList.remove('d-none');
              }

              bsModal.show();
            });
          });

          // Release resources when modal hides
          modalEl.addEventListener('hidden.bs.modal', () => {
            imgEl.removeAttribute('src');
            frameEl.removeAttribute('src');
          });
        })();
    </script>
    <script>
        function initTooltips() {
          document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach(el => {
            const t = bootstrap.Tooltip.getInstance(el);
            if (t) t.dispose();
            new bootstrap.Tooltip(el);
          });
        }
        initTooltips();
    </script>
}
